(()=>{"use strict";var t={511:(t,e)=>{function n(t,e){const n=t.text.spans.map((t=>t.text)).join("");return`  \n    <trans-unit id="${t.id}">\n      <source>${n}</source>\n      <target>${n}</target>\n      <context-group purpose="location">\n        <context context-type="blocktype">${t.type}</context>\n        <context context-type="pageid">${e.persistentId}</context>\n      </context-group>\n    </trans-unit>\n  `}function o(t){let e=t.blocks;for(let n of t.blocks)e=e.concat(r(n));return e}function r(t){let e=t.children;for(let n of t.children)e=e.concat(r(n));return e}Object.defineProperty(e,"__esModule",{value:!0}),e.buildXLiffOutput=e.DocSearchResultDataType=void 0,function(t){t.contentBlock="contentBlock",t.sectionHeader="sectionHeader",t.pageTitle="pageTitle",t.groupTitle="groupTitle"}(e.DocSearchResultDataType||(e.DocSearchResultDataType={})),e.buildXLiffOutput=function(t,e){return`\n  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n  <xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">\n    <file source-language="en" target-language="jp" datatype="plaintext" original="supernova-documentation.data">\n      <header>\n        <tool tool-id="supernova.io" tool-name="supernova"/>\n      </header>\n      <body>\n        ${function(t,e){let r=[];for(let e of t){const t=o(e).filter((t=>"Text"===t.type||"Heading"===t.type||"Callout"===t.type));r=r.concat(t.map((t=>n(t,e))))}return r.join("\n")}(t)}\n      </body>\n    </file>\n  </xliff>\n`}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}(()=>{const t=n(511);Pulsar.registerFunction("buildXLiffOutput",t.buildXLiffOutput)})()})();